[{
    "name": "Users: List enabled users with password never expires",
    "category": "Users Metadata",
    "queryList": [{
        "final": true,
        "query": "MATCH (u:User {pwdneverexpires:true, enabled:true}) return u"
    }]
},{
    "name": "Users: List enabled usersthat logged in within the last 90 days",
    "category": "Users Metadata",
    "queryList": [{
        "final": true,
        "query": "MATCH (u:User {enabled:true}) WHERE u.lastlogon < (datetime().epochseconds - (90 * 86400)) and NOT u.lastlogon IN [-1.0, 0.0] RETURN u"
    }]
},{
    "name": "Users: List enabled users passwords last set within the last 90 days",
    "category": "Users Metadata",
    "queryList": [{
        "final": true,
        "query": "MATCH (u:User {enabled:true}) WHERE u.pwdlastset < (datetime().epochseconds - (90 * 86400)) and NOT u.pwdlastset IN [-1.0, 0.0] RETURN u"
    }]
},{
    "name": "Users: List enabled users never logged on but still active",
    "category": "Users Metadata",
    "queryList": [{
        "final": true,
        "query": "MATCH (u:User {enabled:true}) WHERE u.lastlogontimestamp=-1.0 RETURN u"
    }]
},{
    "name": "Users: List enabled users with password never expires and not changed in last 365 days",
    "category": "Users Metadata",
    "queryList": [{
        "final": true,
        "query": "MATCH (u:User {enabled:true}) WHERE u.pwdneverexpires=TRUE AND u.pwdlastset < (datetime().epochseconds - (365 * 86400)) and NOT u.pwdlastset IN [-1.0, 0.0] return u"
    }]
},{
    "name": "Users: Find all with network shares",
    "category": "Users Metadata",
    "queryList": [{
        "final": true,
        "query": "MATCH (u:User) where (any(prop in keys(u) where u[prop] contains '\\\\')) return u"
    }]
},{
    "name": "Users: List enabled users",
    "category": "Users",
    "queryList": [{
        "final": true,
        "query": "MATCH (u:User {enabled:true}) RETURN u"
    }]
},{
    "name": "Users: Find enabled users with description field",
    "category": "Users",
    "queryList": [{
        "final": true,
        "query": "MATCH (u:User {enabled:true}) WHERE u.description IS NOT null return u"
    }]
},{
    "name": "Users: List enabled users with an email address",
    "category": "Users",
    "queryList": [{
        "final": true,
        "query": "MATCH (u:User {enabled:true}) WHERE exists(u.email) RETURN u"
        }]
},{
    "name": "Users: Find enabled users where the \"userpassword\" attribute is populated",
    "category": "Users",
    "queryList": [{
        "final": true,
        "query": "MATCH (u:User {enabled:true}) WHERE u.userpassword IS NOT null RETURN u"
    }]
},{
    "name": "Users: Find enabled users that don't require passwords",
    "category": "Users",
    "queryList": [{
        "final": true,
        "query": "MATCH (u:User {passwordnotreqd:true, enabled:true}) return u"
    }]
},{
    "name": "Users: Find enabled users AS-REP Roasting targets",
    "category": "Users",
    "queryList": [{
        "final": true,                
        "query": "MATCH (u:User {dontreqpreauth: true, enabled:true}) RETURN u",
        "allowCollapse": false
    }]
},{
    "name": "Users: Find enabled users kerberoastable targets",
    "category": "Users",
    "queryList": [{
        "final": true,                
        "query": "MATCH (u:User {hasspn: true, enabled:true}) RETURN u",
        "allowCollapse": false
    }]
},{
    "name": "Users: List enabled users with 'Local Admin' rights",
    "category": "Users",
    "queryList": [{
        "final": true,
        "query": "MATCH p=(u:User {enabled:true})-[r:AdminTo]->(c:Computer) RETURN p"
        }]
},{
    "name": "Users: List enabled users with 'Local Admin' rights to computer, any active sessions",
    "category": "Users",
    "queryList": [{
        "final": true,
        "query": "MATCH p=(u1:User {enabled:true})-[r1:AdminTo]->(c:Computer)<-[r2:HasSession]-(:User)-[:MemberOf*1..]->(:Group) RETURN p"
        }]
},{
    "name": "Users: List enabled users with 'CanRDP' rights to machines",
    "category": "Users",
    "queryList": [{
        "final": true,
        "query": "MATCH p=(u:User {enabled:true})-[r:CanRDP]->(c:Computer) RETURN p"
    }]
},{
    "name": "User: List enabled user paths with dangerous rights over group",
    "category": "Users Paths",
    "queryList": [{
        "final": true,
        "query": "MATCH p=(u:User {enabled:true})-[r:Owns|WriteDacl|GenericAll|WriteOwner|ExecuteDCOM|GenericWrite|AllowedToDelegate|ForceChangePassword]->(:Group) RETURN p"
    }]
},{
    "name": "User: List enabled user paths with dangerous rights over user",
    "category": "Users Paths",
    "queryList": [{
        "final": true,
        "query": "MATCH p=(u1:User {enabled:true})-[r:Owns|WriteDacl|GenericAll|WriteOwner|ExecuteDCOM|GenericWrite|AllowedToDelegate|ForceChangePassword]->(u2:User) WHERE NOT u1 = u2 RETURN p"
    }]
},{
    "name": "User: [NT][DANGEROUS!!!] List enabled user paths with dangerous rights to any node type",
    "category": "Users Paths",
    "queryList": [{
        "final": true,
        "query": "MATCH (c:Computer), (u1:User), (g:Group), (gp:GPO), (co:Container), (ou:OU) WITH collect([c, u1, g, gp, co, ou]) AS t WITH t AS results UNWIND results AS results_2 UNWIND results_2 AS result MATCH p=(u2:User {enabled:true})-[r:Owns|WriteDacl|GenericAll|WriteOwner|ExecuteDCOM|AllowedToDelegate|ForceChangePassword|AdminTo]->(result) RETURN p"
    }]
},{
    "name": "Users: [NT][TBC] List enabled user paths to AAD:AZGlobalAdmin",
    "category": "Users Paths",
    "queryList": [{
        "final": true,
        "query": "MATCH p=(u:User {enabled:true})-[r:AZGlobalAdmin*1..]->(n) RETURN p"
    }]
}]
